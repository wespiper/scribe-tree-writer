version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: scribe-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - scribe-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: scribe-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - scribe-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: scribe-backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      SECRET_KEY: ${SECRET_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      CORS_ORIGINS: ${CORS_ORIGINS}
      ENVIRONMENT: production
      SENTRY_DSN: ${SENTRY_DSN}
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - scribe-network

  # Frontend served by Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: scribe-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - scribe-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: scribe-nginx
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    networks:
      - scribe-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  scribe-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
